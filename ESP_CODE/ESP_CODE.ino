#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include "DHT.h"

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define DHTPIN 16
#define DHTTYPE DHT11
#define SCREEN_ADDRESS 0x3C

const unsigned char termometro [] PROGMEM = {
	0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 
	0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x78, 0x00, 0x00, 0x00, 0x00, 
	0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 0x00, 0x00, 
	0x00, 0x00, 0x38, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 
	0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 0x00, 0x00, 0x00, 0x00, 
	0x38, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 0x00, 0x00, 
	0x00, 0x00, 0x38, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 
	0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 0x00, 0x00, 0x00, 0x00, 
	0x38, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 0x00, 0x00, 
	0x00, 0x00, 0x39, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x39, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x39, 0x9c, 
	0x00, 0x00, 0x00, 0x00, 0x39, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x39, 0x9c, 0x00, 0x00, 0x00, 0x00, 
	0x39, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x39, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x39, 0x9c, 0x00, 0x00, 
	0x00, 0x00, 0x39, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x39, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x39, 0x9c, 
	0x00, 0x00, 0x00, 0x00, 0x39, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x39, 0x9c, 0x00, 0x00, 0x00, 0x00, 
	0x39, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x39, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x39, 0x9c, 0x00, 0x00, 
	0x00, 0x00, 0x39, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x39, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x39, 0x9c, 
	0x00, 0x00, 0x00, 0x00, 0x39, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x79, 0x9e, 0x00, 0x00, 0x00, 0x00, 
	0xf1, 0x8f, 0x00, 0x00, 0x00, 0x00, 0xf3, 0xcf, 0x00, 0x00, 0x00, 0x00, 0xe7, 0xe7, 0x00, 0x00, 
	0x00, 0x01, 0xef, 0xf7, 0x80, 0x00, 0x00, 0x01, 0xcf, 0xf3, 0x80, 0x00, 0x00, 0x01, 0xcf, 0xf3, 
	0x80, 0x00, 0x00, 0x01, 0xcf, 0xf3, 0x80, 0x00, 0x00, 0x01, 0xcf, 0xf3, 0x80, 0x00, 0x00, 0x01, 
	0xcf, 0xf3, 0x80, 0x00, 0x00, 0x01, 0xcf, 0xf3, 0x80, 0x00, 0x00, 0x01, 0xef, 0xf7, 0x80, 0x00, 
	0x00, 0x00, 0xe7, 0xe7, 0x00, 0x00, 0x00, 0x00, 0xf3, 0xcf, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x0f, 
	0x00, 0x00, 0x00, 0x00, 0x7c, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00
};

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT);
DHT dht(DHTPIN, DHTTYPE);

void setup() {
  Serial.begin(9600);

  if (!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println("SSD1306");
  }

  dht.begin();
}

void loop() {
  float h = dht.readHumidity();
  float t = dht.readTemperature();

  if (isnan(h) || isnan(t))
    return;

  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 0);

  display.print("Temperatura:\n");
  display.print(t);
  display.println(" C");
  
  display.println('\n');

  display.print("Umidade:\n");
  display.print(h);
  display.println("%");
  
  display.drawBitmap(80, 0, termometro, 48, 64, 1);
  
  display.display();

  delay(1000);
}